/*
 * binlog.c
 *
 * Generated on: {{ generated_on }}
 */

#include <stddef.h>

#include <binlog.h>

{{# log_msg_types }}
#define {{ name_uppercase }} {{ code }}
{{/ log_msg_types }}

static bool (*send)(uint8_t ch) = NULL;
static void (*error)(void) = NULL;

static void log(uint8_t msg_type, uint8_t *arg_buf, uint8_t arg_buf_len)
{
	if (send == NULL || err == NULL) {
		return;
	}

	if (!send(msg_type)) {
		error();
		return;
	}

	if (arg_buf_len > 0) {
		for (uint8_t i = 0; i < arg_buf_len; i++) {
			if (!send(arg_buf[i])) {
				error();
				return;
			}
		}
	}
}

void binlog_init(bool (*send_func)(uint8_t ch), void (*error_func)(void)) 
{
	send = send_func;
	error = error_func;
}

{{# log_msg_types }}
void binlog_{{ name_lowercase }}({{ function_param_str }})
{
	{{# has_arguments }}
	uint8_t buf[{{ argument_buffer_len}}];

	{{# argument_to_bytes }}
	{{# . }}
	buf[{{ pos }}] = {{{ conversion }}};
	{{/ . }}

	{{/ argument_to_bytes }}
	log({{ name_uppercase }}, buf, {{ argument_buffer_len }});
	{{/ has_arguments }}
	{{^ has_arguments }}
	log({{ name_uppercase }}, NULL, 0);
	{{/ has_arguments }}
}
{{/ log_msg_types }}
